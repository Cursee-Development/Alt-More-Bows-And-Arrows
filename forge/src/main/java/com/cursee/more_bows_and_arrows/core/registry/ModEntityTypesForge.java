package com.cursee.more_bows_and_arrows.core.registry;

import com.cursee.more_bows_and_arrows.core.entity.TieredArrowEntity;
import com.cursee.more_bows_and_arrows.core.tier.ArrowTier;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.MobCategory;
import net.minecraftforge.registries.RegistryObject;

public class ModEntityTypesForge {

    public static void register() {}

    public static final RegistryObject<EntityType<TieredArrowEntity>> AMETHYST_ARROW = RegistryForge.registerEntityType("amethyst_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.AMETHYST), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("amethyst_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> BAMBOO_ARROW = RegistryForge.registerEntityType("bamboo_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.BAMBOO), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("bamboo_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> BLAZE_ROD_ARROW = RegistryForge.registerEntityType("blaze_rod_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.BLAZE_ROD), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("blaze_rod_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> BONE_ARROW = RegistryForge.registerEntityType("bone_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.BONE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("bone_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> CACTUS_ARROW = RegistryForge.registerEntityType("cactus_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.CACTUS), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("cactus_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> COAL_ARROW = RegistryForge.registerEntityType("coal_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.COAL), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("coal_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> COPPER_ARROW = RegistryForge.registerEntityType("copper_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.COPPER), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("copper_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> DIAMOND_ARROW = RegistryForge.registerEntityType("diamond_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.DIAMOND), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("diamond_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> DRAGON_BREATH_ARROW = RegistryForge.registerEntityType("dragon_breath_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.DRAGON_BREATH), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("dragon_breath_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> DRIPSTONE_ARROW = RegistryForge.registerEntityType("dripstone_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.DRIPSTONE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("dripstone_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> ECHO_ARROW = RegistryForge.registerEntityType("echo_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.ECHO), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("echo_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> EGG_ARROW = RegistryForge.registerEntityType("egg_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.EGG), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("egg_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> EMERALD_ARROW = RegistryForge.registerEntityType("emerald_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.EMERALD), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("emerald_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> ENDER_PEARL_ARROW = RegistryForge.registerEntityType("ender_pearl_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.ENDER_PEARL), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("ender_pearl_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> FIREWORK_ARROW = RegistryForge.registerEntityType("firework_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.FIREWORK), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("firework_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> FIRE_CHARGE_ARROW = RegistryForge.registerEntityType("fire_charge_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.FIRE_CHARGE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("fire_charge_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> FLINT_ARROW = RegistryForge.registerEntityType("flint_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.FLINT), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("flint_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> FLINT_AND_STEEL_ARROW = RegistryForge.registerEntityType("flint_and_steel_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.FLINT_AND_STEEL), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("flint_and_steel_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> GLOW_INK_SAC_ARROW = RegistryForge.registerEntityType("glow_ink_sac_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.GLOW_INK_SAC), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("glow_ink_sac_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> GOLD_ARROW = RegistryForge.registerEntityType("gold_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.GOLD), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("gold_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> ICE_ARROW = RegistryForge.registerEntityType("ice_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.ICE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("ice_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> INK_SAC_ARROW = RegistryForge.registerEntityType("ink_sac_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.INK_SAC), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("ink_sac_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> IRON_ARROW = RegistryForge.registerEntityType("iron_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.IRON), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("iron_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> LADDER_ARROW = RegistryForge.registerEntityType("ladder_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.LADDER), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("ladder_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> LAPIS_ARROW = RegistryForge.registerEntityType("lapis_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.LAPIS), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("lapis_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> LIGHTNING_ROD_ARROW = RegistryForge.registerEntityType("lightning_rod_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.LIGHTNING_ROD), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("lightning_rod_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> NETHERITE_ARROW = RegistryForge.registerEntityType("netherite_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.NETHERITE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("netherite_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> NETHER_QUARTZ_ARROW = RegistryForge.registerEntityType("nether_quartz_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.NETHER_QUARTZ), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("nether_quartz_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> NETHER_STAR_ARROW = RegistryForge.registerEntityType("nether_star_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.NETHER_STAR), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("nether_star_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> OBSIDIAN_ARROW = RegistryForge.registerEntityType("obsidian_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.OBSIDIAN), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("obsidian_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> PAPER_ARROW = RegistryForge.registerEntityType("paper_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.PAPER), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("paper_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> PRISMARINE_ARROW = RegistryForge.registerEntityType("prismarine_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.PRISMARINE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("prismarine_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> REDSTONE_ARROW = RegistryForge.registerEntityType("redstone_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.REDSTONE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("redstone_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> SHEAR_ARROW = RegistryForge.registerEntityType("shear_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.SHEAR), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("shear_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> SHULKER_SHELL_ARROW = RegistryForge.registerEntityType("shulker_shell_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.SHULKER_SHELL), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("shulker_shell_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> SLIMEBALL_ARROW = RegistryForge.registerEntityType("slimeball_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.SLIMEBALL), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("slimeball_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> SMOKING_ARROW = RegistryForge.registerEntityType("smoking_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.SMOKING), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("smoking_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> SNOWBALL_ARROW = RegistryForge.registerEntityType("snowball_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.SNOWBALL), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("snowball_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> TNT_ARROW = RegistryForge.registerEntityType("tnt_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.TNT), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("tnt_arrow"));
    public static final RegistryObject<EntityType<TieredArrowEntity>> WATER_BOTTLE_ARROW = RegistryForge.registerEntityType("water_bottle_arrow", () -> EntityType.Builder.<TieredArrowEntity>of((entityType, level) -> new TieredArrowEntity(entityType, level, ArrowTier.WATER_BOTTLE), MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build("water_bottle_arrow"));
}
